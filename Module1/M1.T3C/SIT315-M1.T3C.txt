int celsius = 0;const int interruptPin= 2;volatile boolean ledOn = false;volatile boolean ledOn1 = false;int temp = 0;int cel = 0;int warning_count = 0;int term = 0;int limit = 10;int count_1 = 0;long duration, cm;void setup(){  Serial.begin(9600);  pinMode(7, OUTPUT);  pinMode(A0, INPUT);  pinMode(10, OUTPUT);  pinMode(11, OUTPUT);  pinMode(12, OUTPUT);  pinMode(13, OUTPUT);  pinMode(interruptPin, INPUT_PULLUP);  attachInterrupt(digitalPinToInterrupt(interruptPin), blink, CHANGE);}void loop(){  temperatureMeasurement();  ultrasonicMeasurement();}void ultrasonicMeasurement(){  // The PING))) is triggered by a HIGH pulse of 2 or more microseconds.  // Give a short LOW pulse beforehand to ensure a clean HIGH pulse:  pinMode(7, OUTPUT);  digitalWrite(7, LOW);  delayMicroseconds(2);  digitalWrite(7, HIGH);  delayMicroseconds(5);  digitalWrite(7, LOW);  // The same pin is used to read the signal from the PING))): a HIGH  // pulse whose duration is the time (in microseconds) from the sending  // of the ping to the reception of its echo off of an object.  pinMode(7, INPUT);  duration = pulseIn(7, HIGH);  // convert the time into a distance  cm = microsecondsToCentimeters(duration);  // Print the distance  Serial.print("Distance: ");  Serial.print(cm);  Serial.print("cm");  Serial.println();  delay(1000);  // Turn on the LED if the object is too close:  if(cm < 200) {    ledOn1 = true;    digitalWrite(13, ledOn1);    delay(500);    digitalWrite(13, LOW);  }  else {    digitalWrite(13, LOW);  }  digitalWrite(12, LOW);  digitalWrite(11, LOW);  digitalWrite(10, LOW);  delay(10);}long microsecondsToCentimeters(long microseconds) {  // The speed of sound is 340 m/s or 29 microseconds per centimeter.  // The ping travels out and back, so to find the distance of the  // object we take half of the distance travelled.  return microseconds / 29 / 2;}void temperatureMeasurement(){   cel = (-40 + 0.488155 * (analogRead(A0) - 20));   if (warning_count < limit) {   delay(1000); // Wait for 1000 millisecond(s)    cel = (-40 + 0.488155 * (analogRead(A0) - 20));    if (cel <= temp) {      ledOn = true;      warning_count = 0;      digitalWrite(12, ledOn);      digitalWrite(11, LOW);      digitalWrite(10, LOW);      Serial.print(cel);      Serial.print("C ");      Serial.println("- Temp Ok");      delay(500); // Wait for 500 millisecond(s)      digitalWrite(12, LOW);    }    if (cel > temp && cel < 75) {      ledOn = true;      warning_count = 0;      digitalWrite(12, LOW);      digitalWrite(11, ledOn);      digitalWrite(10, LOW);      Serial.print(cel);      Serial.print("C ");      Serial.println("- Temp moderate (Watch!)");      delay(500); // Wait for 500 millisecond(s)      digitalWrite(11, LOW);    }    if (cel >= 75) {      ledOn = true;      warning_count += 1;      digitalWrite(12, LOW);      digitalWrite(11, LOW);      digitalWrite(10, ledOn);      Serial.print(cel);      Serial.print("C ");      Serial.print("- Overheating :: Warning: ");      Serial.print(warning_count);      Serial.print("/");      Serial.println(limit);      delay(500); // Wait for 500 millisecond(s)      digitalWrite(10, LOW);    }   }  if (count_1 != 1) {    if (warning_count == limit) {      count_1 = 1;      Serial.println("END - TEMP MONITORING SUSPENDED");      while (count_1 == 1) {        digitalWrite(12, HIGH);        digitalWrite(11, HIGH);        digitalWrite(10, HIGH);        delay(500); // Wait for 500 millisecond(s)        digitalWrite(12, LOW);        digitalWrite(11, LOW);        digitalWrite(10, LOW);        delay(500); // Wait for 500 millisecond(s)      }    }  }  delay(1000); // Wait for 1000 millisecond(s)}void blink() {  // if button has been pressed, ledOn = true and led lights activate  if (ledOn)  {    ledOn = true;    digitalWrite(10, HIGH);    digitalWrite(11, HIGH);    digitalWrite(12, HIGH);    delay(5000);    Serial.println("Temperature detection interrupted");  }  if (ledOn1)  {    ledOn1 = true;    digitalWrite(13, HIGH);    delay(5000);    Serial.println("Distance detection interrupted");  }  else  {    ledOn1 = false;    digitalWrite(13, LOW);    digitalWrite(10, LOW);    digitalWrite(11, LOW);    digitalWrite(12, LOW);  }}